Предистория: Использование подхода для сообщения об ошибке операциям находящимся выше по потоку вызова с помощью
объекта OperationResult требует от программиста обрабатывать передачу этого объекта через return statement, что
достаточно не удобно, путает код - что в итоге может привести к механическим ошибкам в коде. Механизм Exception Handling
позволяет наладит дополнительный канал для возврата информации об операции внутри метода или блока кроме обычного Return
выражения.

К примеру в нашем коде информирование о возникновении исключительной ситуации обрабатываемое операцей:
 return new OperationResult(false, "day value is incorrect, should be less than 28");
Заменяется на:
 throw new OperationException("day value is incorrect, should be less than 28");

Обработка же объекта с вот этого кода:
operationResult = callSomeOperation();

if (operationResult.getSuccess() == false) {
            System.err.println(operationResult.getErrorMsg());
}

Заменяется на:
try {
  callSomeOperation();
} catch(OperationException e) {
  System.err.println(e.getMessage());
}

Помимо этого наша программа теперь может при введении некорректных данных пользователем дать ему возможность ввести
данные повторно (например, произошла ошибка неправильного формата ввода данных). Cм. TelephoneBookApplication
блок ввода данных Birthday. Обратите внимание на метод scanLineOrThrowException(), а также на использование
стандартного класса NumberFormatException - который возникает тогда, когда в операции Integer.parseInt(val) значение
val не является целым числом и не может быть превращено в цифровое значение.

Также теперь программа дает возможность пользователю выйти из программы в любой момент путем введения специальной
команды. Cм. TelephoneBookApplication блок ввода данных Birthday. Обратите внимание на ключевое слово throws в
объявлении метода: void methodName(...) throws ClientWantsToExitException() {...}, а также на try {} catch() блок
в методе main().

Задача для учеников:
1. Удалить класс OperationResult и заменить везде его использование классом OperationException
2. Для всех исключительных ситуаций при вводе данных применить подход "повтора операции при ошибке" по примеру для
операции ввода данных Birthday
3. Применить подход использования исключительных ситуаций для стандартизации "аварийного выхода из программы" по примеру
для операции ввода данных Birthday для всех участков кода где предусматривается ввод данных - не только на создание
страницы, но и на удаление, редактирование - т.е. везде где пользователь использует Scanner